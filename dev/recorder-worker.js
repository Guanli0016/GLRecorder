var t,e,n,i,s,a;!function(t){t[t.SAMPLE_8=8e3]="SAMPLE_8",t[t.SAMPLE_11=11025]="SAMPLE_11",t[t.SAMPLE_16=16e3]="SAMPLE_16",t[t.SAMPLE_22=22050]="SAMPLE_22",t[t.SAMPLE_44=44100]="SAMPLE_44",t[t.SAMPLE_48=48e3]="SAMPLE_48"}(t||(t={})),function(t){t[t.BIT_8=8]="BIT_8",t[t.BIT_16=16]="BIT_16",t[t.BIT_32=32]="BIT_32"}(e||(e={})),function(t){t[t.CHANNELS_1=1]="CHANNELS_1",t[t.CHANNELS_2=2]="CHANNELS_2"}(n||(n={})),function(t){t.WAVE="wave",t.MP3="mp3"}(i||(i={})),function(t){t[t.SUCCESS=0]="SUCCESS",t[t.NOT_SUPPORT=-1]="NOT_SUPPORT",t[t.NOT_FOUNDED=-2]="NOT_FOUNDED",t[t.NOT_ALLOWED=-3]="NOT_ALLOWED",t[t.ERROR=-9]="ERROR"}(s||(s={})),function(t){t.SUCCESS="打开麦克风成功",t.NOT_SUPPORT="浏览器不支持录音功能",t.NOT_FOUNDED="找不到麦克风",t.NOT_ALLOWED="麦克风被禁止使用",t.ERROR="打开麦克风出现异常"}(a||(a={}));class r{constructor(t,e){this.lame=t,this.config=e}encode(t,e){let n,i=null;n=this.convertBuffer(e[0]),2===this.config.numChannels&&(i=this.convertBuffer(e[1]));let s=n.length,a=1152;for(let e=0;s>=0;e+=a){let r=n.subarray(e,e+a),h=null;i&&(h=i.subarray(e,e+a));let l=this.lame.encodeBuffer(r,h);t.push(new Int8Array(l)),s-=a}}convertBuffer(t){let e;if(this.config.sampleRate===this.config.defaultSampleRate)e=new Float32Array(t);else{let n=this.config.defaultSampleRate/this.config.sampleRate,i=Math.ceil(t.length/n);e=new Float32Array(i);for(let s=0,a=0;s<i;a+=n)e[s++]=t[~~a]}return this.floatTo16BitPCM(e)}floatTo16BitPCM(t){let e=new Int16Array(t.length);for(let n=0;n<t.length;n++){let i=Math.max(-1,Math.min(1,t[n]));e[n]=i<0?32768*i:32767*i}return e}}class h{constructor(t){this.config=t}encode(t,e){let n,i=[];for(let n=0;n<this.config.numChannels;n++)i.push(this.mergeBuffers(t[n],e));n=2===this.config.numChannels?this.interleave(i[0],i[1]):i[0];let s=this.compressBuffer(n);return this.encodeWav(s)}mergeBuffers(t,e){let n=new Float32Array(e),i=0;for(let e=0;e<t.length;e++)n.set(t[e],i),i+=t[e].length;return n}interleave(t,e){let n=t.length+e.length,i=new Float32Array(n),s=0,a=0;for(;s<n;)i[s++]=t[a],i[s++]=e[a],a++;return i}compressBuffer(t){if(this.config.sampleRate==this.config.defaultSampleRate)return t;if(this.config.sampleRate>this.config.defaultSampleRate)throw"downsampling rate show be smaller than original sample rate";let e=Math.round(this.config.defaultSampleRate/this.config.sampleRate),n=Math.round(t.length/e),i=new Float32Array(n),s=0,a=0;for(;s<n;){let n=(s+1)*e*this.config.numChannels,r=0,h=0;for(let e=a;e<n&&e<t.length;e+=this.config.numChannels)r+=t[e],h++;i[s*this.config.numChannels]=r/h,2===this.config.numChannels&&(i[s*this.config.numChannels+1]=r/h),s++,a=n}return i}encodeWav(t){let e=new ArrayBuffer(44+2*t.length),n=new DataView(e);return this.writeString(n,0,"RIFF"),n.setUint32(4,36+2*t.length,!0),this.writeString(n,8,"WAVE"),this.writeString(n,12,"fmt "),n.setUint32(16,16,!0),n.setUint16(20,1,!0),n.setUint16(22,this.config.numChannels,!0),n.setUint32(24,this.config.sampleRate,!0),n.setUint32(28,this.config.sampleRate*this.config.numChannels*this.config.bitRate/8,!0),n.setUint16(32,this.config.numChannels*this.config.bitRate/8,!0),n.setUint16(34,this.config.bitRate,!0),this.writeString(n,36,"data"),n.setUint32(40,2*t.length,!0),this.floatTo16BitPCM(n,44,t),n}floatTo16BitPCM(t,e,n){for(let i=0;i<n.length;i++,e+=2){let s=Math.max(-1,Math.min(1,n[i]));t.setInt16(e,s<0?32768*s:32767*s,!0)}}writeString(t,e,n){for(let i=0;i<n.length;i++)t.setUint8(e+i,n.charCodeAt(i))}}class l{constructor(t,e){this.size=0,this.mime=i.WAVE,this.lame=t,this.config=e}init(t=i.WAVE){this.size=0,this.mime=t,this.buffer=this.createBuffer(this.mime),this.encoder=this.createEncoder(this.mime)}write(t){this.mime===i.MP3?this.writeMp3(t):this.writeWave(t)}finish(){var t;if(this.mime===i.MP3)return this.buffer.push(new Int8Array(this.lame.flush())),new Blob(this.buffer,{type:"audio/mp3"});{let e=null===(t=this.encoder)||void 0===t?void 0:t.encode(this.buffer,this.size);return new Blob([e],{type:"audio/wav"})}}writeMp3(t){var e;null===(e=this.encoder)||void 0===e||e.encode(this.buffer,t)}writeWave(t){for(let e=0;e<this.config.numChannels;e++)this.buffer[e].push(t[e]);this.size+=t[0].length}createEncoder(t=i.WAVE){return t===i.MP3?new r(this.lame,this.config):new h(this.config)}createBuffer(t=i.WAVE){if(t===i.MP3){return new Array}{let t=new Array(this.config.numChannels);for(let e=0;e<this.config.numChannels;e++){let n=new Array;t[e]=n}return t}}}!function(){let t,e,n;importScripts("./lame.min.js"),self.addEventListener("message",(s=>{switch(s.data.cmd){case"init":r=s.data.config.object,t=r,e=new lamejs.Mp3Encoder(t.numChannels,t.sampleRate,t.kbps),n=new l(e,t);break;case"start":!function(t=i.WAVE){n.init(t)}(s.data.mime);break;case"encode":a=s.data.datas,n.write(a);break;case"stop":!function(){let t=n.finish();self.postMessage({cmd:"finished",blob:t})}()}var a,r}))}();
